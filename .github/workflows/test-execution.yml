name: Test Execution and Publish Report

on:
  schedule:
  - cron: "45 6 * * 1-5"
  
  workflow_dispatch:
    inputs:
      TOKEN_EXPIRY_SECONDS:
        required: false
        type: number
        description: Token Expiry Override (Seconds)
      
      test_name:
        description: Test Method / Test class Name (e.g., MyTestClass#myTestMethod or MyTestClass1, MyTestClass2)
        required: false
        type: string

      test_group:
        description: Test Group (e.g., smoke,regression or smoke)
        required: false
        type: string

      parallel:
        description: Run Test in Parallel
        type: boolean
        default: false

      publish_report:
        description: Publish Allure Report, Javadoc and Azure Devops Test Results
        type: boolean
        default: true

permissions:
  id-token: write
  contents: read
  pages: write

env:
  AMADEUS_TEST_SECRET: ${{ secrets.AMADEUS_TEST_SECRET }}
  PARALLEL: ${{ github.event_name == 'schedule' && 'true' || inputs.parallel }}
  PUBLISH_REPORT: ${{ github.event_name == 'schedule' && 'true' || inputs.publish_report }}

jobs:
  test-execution:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    container:
      image: maven:3.9.6-eclipse-temurin-21

    steps:
      - name: Checkout the Repository to Runner
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: /root/.m2/repository # Important: path must match inside container
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Execute Test
        shell: bash
        run: |
          EXTRA_PARAMS=""
      
          if [ "$PARALLEL" = "true" ]; then
            EXTRA_PARAMS+=" -Dparallel=true";
          fi

          if [ "${{ inputs.TOKEN_EXPIRY_SECONDS }}" != "" ]; then
            EXTRA_PARAMS+=" -DTOKEN_EXPIRY_SECONDS=${{ inputs.TOKEN_EXPIRY_SECONDS }}";
          fi

          if [ "${{ inputs.test_name }}" != "" ]; then
            EXTRA_PARAMS+=' -Dtest=${{ inputs.test_name }}';
          fi

          if [ "${{ inputs.test_group }}" != "" ]; then
            EXTRA_PARAMS+=' -Dgroups=${{ inputs.test_group }}';
          fi

          echo "Running with: mvn clean test ${EXTRA_PARAMS}"
          mvn clean test ${EXTRA_PARAMS}

      - name: Generate Allure Report
        if: success() || failure()
        uses: NayeemJohnY/actions/allure-report-with-history@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 3

      - name: Post Test Results to Azure DevOps
        if: ${{ (success() || failure()) && env.PUBLISH_REPORT == 'true' }}
        uses: NayeemJohnY/actions/post-test-results-to-azure-devops@main
        with:
          test-results-json: test-results/test-results-report.json
          azure-token: ${{ secrets.AZURE_TOKEN }}
          org-url: ${{ secrets.AZURE_ORG_URL }}
          project: ${{ secrets.AZURE_PROJECT }}

      - name: Build Maven Javadocs
        if: ${{ (success() || failure()) && env.PUBLISH_REPORT == 'true' }}
        run: mvn javadoc:javadoc javadoc:test-javadoc

      - name: Prepare GitHub Pages Content
        if: ${{ (success() || failure()) && env.PUBLISH_REPORT == 'true' }}
        uses: NayeemJohnY/actions/prepare-github-pages@main
        with:
         allure-report-dir: test-results/allure-report
         javadoc-dir: target/reports
         test-results-json: test-results/test-results-report.json

      - name: Deploy GitHub Pages
        if: ${{ (success() || failure()) && env.PUBLISH_REPORT == 'true' }}
        uses: NayeemJohnY/actions/deploy-github-pages-site@main
