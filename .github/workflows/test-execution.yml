name: Test Execution and Publish Report

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pages: write

env:
  AMADEUS_TEST_SECRET: ${{ secrets.AMADEUS_TEST_SECRET }}

jobs:
  test-execution:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    container:
      image: maven:3.9.6-eclipse-temurin-21

    steps:
      - name: Checkout the Repository to Runner
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: /root/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Execute Test
        run: mvn clean test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results

  generate-report:
    needs: test-execution
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: ghcr.io/allure-framework/allure:2.27.0

    steps:
      - name: Cache Allure CLI
        id: cache-allure
        uses: actions/cache@v4
        with:
          path: /opt/allure
          key: allure-2.27.0

      - name: Install Allure CLI
        if: steps.cache-allure.outputs.cache-hit != 'true'
        run: |
          curl -o allure-2.27.0.tgz -L https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -sf /opt/allure/bin/allure /usr/bin/allure

      - name: Download Current Test Execution Test Results
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: test-results

      - name: Get Previous Test Execution Workflow Run ID
        if: success() || failure()
        id: get-run-id
        uses: actions/github-script@v7
        with:
          script: |
            const workflow_id = "test-execution.yml";
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id
            });

            const previousRun = runs.data.workflow_runs.find(run => run.id !== context.runId);

            if (!previousRun) {
              core.info("No previous run found â€” skipping history copy.");
              core.setOutput("run_id", "");
            }

            core.setOutput("run_id", previousRun.id);

      - name: Download Allure History from Previous Run
        if: success() || failure()
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: test-results
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: test-results-prev-run
          run-id: ${{ steps.get-run-id.outputs.run_id }}

      - name: Generate Allure Report
        if: success() || failure()
        run: |
          if [ -d test-results-prev-run/allure-report/history ]; then
            cp -r test-results-prev-run/allure-report/history test-results/allure-results/history
            echo "Allure history copied from previous run."
          fi

          allure generate test-results/allure-results --clean -o test-results/allure-report

      - name: Upload Test Results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results

      - name: Prepare Allure Report for Github Pages
        if: success() || failure()
        shell: bash
        run: |
          cp -r test-results/allure-report github-pages/allure-report

      - name: Setup Github Pages
        if: success() || failure()
        uses: actions/configure-pages@v5

      - name: Upload Allure Report to Github Pages
        if: success() || failure()
        uses: actions/upload-pages-artifact@v3
        with:
          path: "github-pages/"

      - name: Publish Allure Report to Github Pages
        if: success() || failure()
        id: publish
        uses: actions/deploy-pages@v4
